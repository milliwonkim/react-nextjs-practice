{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kiwonkim/Desktop/nextjs-section5/nextjs-course-code/pages/last-sales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nfunction LastSalesPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      sales = _useState[0],\n      setSales = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch('https://nextjs-course-d53cd-default-rtdb.firebaseio.com/sales.json').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var transformedSales = [];\n\n      for (var key in data) {\n        transformedSales.push({\n          id: key,\n          username: data[key].username,\n          volume: data[key].volume\n        });\n      }\n\n      setSales(transformedSales);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!sales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data YET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(function (sale) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sale.username, \" - \", sale.volume]\n      }, sale.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LastSalesPage, \"WCe1tDLbFRFj3vwCplcozM9s2AA=\");\n\n_c = LastSalesPage;\nexport default LastSalesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastSalesPage\");","map":{"version":3,"sources":["/Users/kiwonkim/Desktop/nextjs-section5/nextjs-course-code/pages/last-sales.js"],"names":["React","useEffect","useState","LastSalesPage","sales","setSales","isLoading","setIsLoading","fetch","then","response","json","data","transformedSales","key","push","id","username","volume","map","sale"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AAAA,kBACKD,QAAQ,CAAC,EAAD,CADb;AAAA,MACdE,KADc;AAAA,MACPC,QADO;;AAAA,mBAEaH,QAAQ,CAAC,KAAD,CAFrB;AAAA,MAEdI,SAFc;AAAA,MAEHC,YAFG;;AAIrBN,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CACD,oEADC,CAAL,CAGKC,IAHL,CAGU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAHV,EAIKF,IAJL,CAIU,UAACG,IAAD,EAAU;AACZ,UAAMC,gBAAgB,GAAG,EAAzB;;AACA,WAAK,IAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACpBC,QAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AAClBC,UAAAA,EAAE,EAAEF,GADc;AAElBG,UAAAA,QAAQ,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,QAFF;AAGlBC,UAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI;AAHA,SAAtB;AAKH;;AACDb,MAAAA,QAAQ,CAACQ,gBAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAfL;AAgBH,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAID,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACF,KAAL,EAAY;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,cACKA,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD;AAAA,0BACP;AAAA,mBACKA,IAAI,CAACH,QADV,SACuBG,IAAI,CAACF,MAD5B;AAAA,SAASE,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,eADO;AAAA,KAAV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAzCQb,a;;KAAAA,a;AA2CT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction LastSalesPage() {\n    const [sales, setSales] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch(\n            'https://nextjs-course-d53cd-default-rtdb.firebaseio.com/sales.json'\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                const transformedSales = [];\n                for (const key in data) {\n                    transformedSales.push({\n                        id: key,\n                        username: data[key].username,\n                        volume: data[key].volume,\n                    });\n                }\n                setSales(transformedSales);\n                setIsLoading(false);\n            });\n    }, []);\n\n    if (isLoading) {\n        return <p>Loading...</p>;\n    }\n\n    if (!sales) {\n        return <p>No Data YET</p>;\n    }\n\n    return (\n        <ul>\n            {sales.map((sale) => (\n                <li key={sale.id}>\n                    {sale.username} - {sale.volume}\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}