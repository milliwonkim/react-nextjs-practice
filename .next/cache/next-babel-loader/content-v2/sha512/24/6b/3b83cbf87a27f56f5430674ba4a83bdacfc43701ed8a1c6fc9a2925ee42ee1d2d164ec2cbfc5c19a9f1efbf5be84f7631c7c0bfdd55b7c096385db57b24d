{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kiwonkim/Desktop/nextjs-section5/nextjs-course-code/pages/[pid].js\";\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { Fragment } from 'react';\n\nfunction ProductDetailPage(props) {\n  const {\n    loadedProduct\n  } = props; // if (!loadedProduct) {\n  //     return <p>Loading...</p>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\nasync function getData() {\n  const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n  return data;\n}\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const productId = params.pid;\n  const data = await getData();\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const data = await getData();\n  const ids = data.products.map(product => product.id);\n  const pathsWithParams = ids.map(id => ({\n    params: {\n      pid: id\n    }\n  }));\n  return {\n    paths: pathsWithParams,\n    fallback: true\n  };\n}\nexport default ProductDetailPage;","map":{"version":3,"sources":["/Users/kiwonkim/Desktop/nextjs-section5/nextjs-course-code/pages/[pid].js"],"names":["fs","path","Fragment","ProductDetailPage","props","loadedProduct","title","description","getData","filePath","join","process","cwd","jsonData","readFile","data","JSON","parse","getStaticProps","context","params","productId","pid","product","products","find","id","getStaticPaths","ids","map","pathsWithParams","paths","fallback"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,aAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B,CAD8B,CAG9B;AACA;AACA;;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA,gBAAKC,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;AAED,eAAeC,OAAf,GAAyB;AACrB,QAAMC,QAAQ,GAAGR,IAAI,CAACS,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMb,EAAE,CAACc,QAAH,CAAYL,QAAZ,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AAEA,SAAOE,IAAP;AACH;;AAED,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AAEA,QAAME,SAAS,GAAGD,MAAM,CAACE,GAAzB;AAEA,QAAMP,IAAI,GAAG,MAAMP,OAAO,EAA1B;AAEA,QAAMe,OAAO,GAAGR,IAAI,CAACS,QAAL,CAAcC,IAAd,CAAoBF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeL,SAA/C,CAAhB;AAEA,SAAO;AACHjB,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAEkB;AADZ;AADJ,GAAP;AAKH;AAED,OAAO,eAAeI,cAAf,GAAgC;AACnC,QAAMZ,IAAI,GAAG,MAAMP,OAAO,EAA1B;AAEA,QAAMoB,GAAG,GAAGb,IAAI,CAACS,QAAL,CAAcK,GAAd,CAAmBN,OAAD,IAAaA,OAAO,CAACG,EAAvC,CAAZ;AACA,QAAMI,eAAe,GAAGF,GAAG,CAACC,GAAJ,CAASH,EAAD,KAAS;AACrCN,IAAAA,MAAM,EAAE;AACJE,MAAAA,GAAG,EAAEI;AADD;AAD6B,GAAT,CAAR,CAAxB;AAMA,SAAO;AACHK,IAAAA,KAAK,EAAED,eADJ;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH;AAED,eAAe7B,iBAAf","sourcesContent":["import fs from 'fs/promises';\nimport path from 'path';\nimport { Fragment } from 'react';\n\nfunction ProductDetailPage(props) {\n    const { loadedProduct } = props;\n\n    // if (!loadedProduct) {\n    //     return <p>Loading...</p>;\n    // }\n\n    return (\n        <Fragment>\n            <h1>{loadedProduct.title}</h1>\n            <p>{loadedProduct.description}</p>\n        </Fragment>\n    );\n}\n\nasync function getData() {\n    const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n    const jsonData = await fs.readFile(filePath);\n    const data = JSON.parse(jsonData);\n\n    return data;\n}\n\nexport async function getStaticProps(context) {\n    const { params } = context;\n\n    const productId = params.pid;\n\n    const data = await getData();\n\n    const product = data.products.find((product) => product.id === productId);\n\n    return {\n        props: {\n            loadedProduct: product,\n        },\n    };\n}\n\nexport async function getStaticPaths() {\n    const data = await getData();\n\n    const ids = data.products.map((product) => product.id);\n    const pathsWithParams = ids.map((id) => ({\n        params: {\n            pid: id,\n        },\n    }));\n\n    return {\n        paths: pathsWithParams,\n        fallback: true,\n    };\n}\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}